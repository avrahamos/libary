// <auto-generated />
using Libray.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Libray.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240731111924_Initialcreate")]
    partial class Initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Libray.Models.BookModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Ganre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Hige")
                        .HasColumnType("int");

                    b.Property<long>("SetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Libray.Models.LibaryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Ganre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Ganre")
                        .IsUnique();

                    b.ToTable("Libaries");
                });

            modelBuilder.Entity("Libray.Models.SetModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("ShelfId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShelfId");

                    b.ToTable("sets");
                });

            modelBuilder.Entity("Libray.Models.ShelfModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("High")
                        .HasColumnType("int");

                    b.Property<long>("LibaryId")
                        .HasColumnType("bigint");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibaryId");

                    b.ToTable("Shelfs");
                });

            modelBuilder.Entity("Libray.Models.BookModel", b =>
                {
                    b.HasOne("Libray.Models.SetModel", "set")
                        .WithMany("books")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set");
                });

            modelBuilder.Entity("Libray.Models.SetModel", b =>
                {
                    b.HasOne("Libray.Models.ShelfModel", "Shelf")
                        .WithMany("sets")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("Libray.Models.ShelfModel", b =>
                {
                    b.HasOne("Libray.Models.LibaryModel", "Libary")
                        .WithMany("Shelfes")
                        .HasForeignKey("LibaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libary");
                });

            modelBuilder.Entity("Libray.Models.LibaryModel", b =>
                {
                    b.Navigation("Shelfes");
                });

            modelBuilder.Entity("Libray.Models.SetModel", b =>
                {
                    b.Navigation("books");
                });

            modelBuilder.Entity("Libray.Models.ShelfModel", b =>
                {
                    b.Navigation("sets");
                });
#pragma warning restore 612, 618
        }
    }
}
